function [] = HypCreateSimg(prefix)%   HypCreateSimg(prefix) %   Creates an .Simg file out of of hyperspectral acquisition%   output.%   The function will seek into a directory called 'raw'prefix%   for .dmp files representing the acquisition and the corresponding%   dark acquisitions. It will also look for a options.mat file which has%   been automatically generated by the acquisition software and contains%   details about the acquisition condition.%   Those options are not yet fully used but the information is here.%%   06/23/00  pxl wrote this  while (isempty(prefix))  prefix = input('\nEnter prefix for images : ','s');enddirectory1 = ['raw' prefix];prevDir = pwd;cd(directory1);load optionsif (~exist('cameraDistance'))  fprintf(['Distance will be wrong due to prior variable naming\nPlease' ...	   ' change it in your .Simg file after this is done']);  cameraDistance = 10;endcd(prevDir);directory2 = ['d-s' prefix];directory3 = [prefix];width = 550;height = 550;newWidth = 512;newHeight = 512;starth = 1;startw = 16;cameraFile = 'hypercam2_135mm.Scam';originalPlatform = 1; % an intel proc. wrote the fileS_hyperspectral = [400 10 31];offset = 3;type = 'uint16';% Dark Substractionif (options(1))  if (exist(directory2)~=7)    eval(['!mkdir ' directory2 ]);    if (exist(directory2)~=7)      fprintf(1,'Couldn''t create the directory %s :\n',directory2);      return;    end  end  fprintf('Using %s directory for darksubstracted images\n',directory2);  HypDarkSubstract(prefix,['dark' prefix],directory1,directory2,S_hyperspectral,height,width,starth,startw,newHeight,newWidth);else  error('For now we don''t know how to deal with not dark substracted images');endif (options(3))  prevDir = pwd;  cd(directory1);  load mccLocs  mccLocs = selectedPoints.position - repmat([starth-1 startw-1],size(selectedPoints.position,1),1);  load listOfMccs  mccs = find(listOfMccs==1);  cd(prevDir)endif (options(3))  if (exist(directory3)~=7)    eval(['!mkdir ' directory3 ]);    if (exist(directory3)~=7)      fprintf(1,'Couldn''t create the directory %s :\n',directory3);      return;    end  end  HypAffineCorrImages(directory2,prefix,directory3,S_hyperspectral,newWidth,newHeight,type,originalPlatform,mccs,mccLocs);else  directory3 = directory2;end% Spectro-radiometer calibrationif (options(2))  prevDir = pwd;  cd(directory1);  load refSpectra;  load refLocs%  refLocs = selectedPoints.position - repmat([starth-1 startw-1],size(selectedPoints.position,1),1);  cd(prevDir)endif (options(2))  HypSpectralCorrImages(directory2,prefix,directory3,S_hyperspectral,newWidth,newHeight,type,originalPlatform,refSpectra,refLocs);else  error(['For now we don''t know how to deal with spectral calibration' ...	 ' without using radiometer measurement']);endHypWriteSimg(cameraFile,[prefix '.Simg'],[directory3 '/'],prefix,newWidth,newHeight,cameraDistance,originalPlatform,type);if (~options(3))  eval(['!mv ' directory2 ' 'prefix]);endfprintf(['You still need to make a copy or a link of the image directory' ...	 ' (' prefix ') in your usual Simulator image directory (usually ~/SimData/SimImages)\n']);% Example of link on linux box :% ln -s /home/longere/matlab/hyper2/out31 /home/longere/toolboxes/SimAll/SimToolbox/SimData/SimImages/out31