function SimWriteMonitor(fileName,monitor)% SimWriteMonitor(fileName,monitor)%% Write the monitor file from the structure% even if it contains unknown fields.%% 11/04/98	pxl	 Wrote it.% 11/06/98  pxl  Avoid writing of big unused fields.% 2/27/99   dhb  Rewrite for new file formats.% 2/10/07   dhb  Modify to work more closely with PTB3 routines.% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.% Argument checkif (nargin ~= 2)	  error('Usage: SimWriteMonitor(fileName,monitor)');end% Switch around naming conventions for file,% and remove fields that are generated on read.monitor.emissionSpectra = monitor.P_device;monitor = rmfield(monitor,'P_device');monitor.ambientSpectrum = monitor.P_ambient;monitor = rmfield(monitor,'P_ambient');monitor = rmfield(monitor,'S_device');monitor = rmfield(monitor,'S_ambient');monitor = rmfield(monitor,'T_device');monitor = rmfield(monitor,'T_ambient');% Mandatory comment field must go last, so% we put it there.if (~isfield(monitor,'comments'))	error('Passed monitor does not contain comment field');endtemp = monitor.comments;monitor = rmfield(monitor,'comments');monitor.comments = temp;% Open the fileif (isstr(fileName))	file = fopen(fileName,'w');	if (isequal(file,-1))		   error(sprintf('SimWriteMonitor: file %s not found',fileName));	endelse	file = fileName;end% Write out the fieldsfields = fieldnames(monitor);for i = 1:length(fields)	eval(['SimWriteCustomField(file,fields{i},monitor.' fields{i} ');']);end% Close fileif (isstr(fileName))	fclose(file);end