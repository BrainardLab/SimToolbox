function errorImage = SimComputeDeltaELab(images1XYZ,images2XYZ,whiteXYZ)%  errorImage = SimComputeDeltaELab(images1XYZ,images2XYZ,whiteXYZ)% % Compute CIELAB delta E* difference point by point, return the% result.%% 12/18/98  dhb  Wrote it.% 12/09/99  pxl  Added support for vector input% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.isVector = ~(size(size(images1XYZ),2)>2);if (~isVector)  % Get sizes.  height = size(images1XYZ,1);  width = size(images1XYZ,2);  numberPlanesIn = size(images1XYZ,3);    % Convert input format to one long string of column vectors  images1XYZ = reshape(images1XYZ,height*width,1,numberPlanesIn);  images1XYZ = squeeze(images1XYZ)';  images2XYZ = reshape(images2XYZ,height*width,1,numberPlanesIn);  images2XYZ = squeeze(images2XYZ)';end% Convert to LAB and compute DEimages1Lab = XYZToLab(images1XYZ,whiteXYZ); clear images1XYZ;images2Lab = XYZToLab(images2XYZ,whiteXYZ); clear images2XYZ;errorImage = ComputeDE(images1Lab,images2Lab);% Apply transformif (~isVector)  errorImage = reshape(errorImage,height,width);end