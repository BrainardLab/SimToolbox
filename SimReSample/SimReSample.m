function [outputImage] = SimReSample(inputImage,outputCamera)% [outputImage] = SimReSample(inputImage,outputCamera)%% Resamples the ideal camera images to match the actual% resolution of the simulated camera and the viewing% geometry.%% Calling this routine from outside of the simulation% loop is not really recommended unless you think% through how to re-write the camera structure for the% image.%% 07/07/98		pxl  Wrote it (cropping)% 09/01/98		pxl  Wrote an actual resampling% 10/30/98		dhb  Added comments.% 11/21/98		pxl  Moved resolution calculation inside this function% 12/31/98		dhb  Rewrite to use interp2, new SimCalculateResolution.% 1/4/99			dhb  Fixed up all the bugs introduced in rewrite.% 1/10/99   	dhb  DISPLAY, PRINT options.% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.% Show result for debugging?DISPLAY = 0;PRINT = 0;% Sanity check.nSensorsIn = size(inputImage.images,3);nSensorsOut = outputCamera.numberSensors;if (nSensorsIn ~= nSensorsOut)	error('Sensor number mismatch');end% Calculate the size of the the hyperspectral scene % in the simulated camera array size. [inputWidth,inputHeight,outputWidth,outputHeight] = ...	SimCalculateResolution(inputImage,outputCamera);if (PRINT)	fprintf('SimReSample: %g rows by %g cols -> %g rows by %g cols\n',...		inputHeight,inputWidth,outputHeight,outputWidth);end% Compute x and y coordinates of output, with respect% to input pixel space.outputX = linspace(1+inputImage.offsetX,inputWidth+inputImage.offsetX,outputWidth);outputY = linspace(1+inputImage.offsetY,inputHeight+inputImage.offsetY,outputHeight)';% Set up output image, then resample each plane.% Hope that there is enough memory.outputImage = inputImage;outputImage.height = outputHeight;outputImage.width = outputWidth;outputImage.images = zeros(outputHeight,outputWidth,outputCamera.numberSensors);for n = 1:outputCamera.numberSensors	outputImage.images(:,:,n) = interp2(inputImage.images(:,:,n),outputX,outputY);endif (DISPLAY)	figure; clf;	subplot(3,1,1);	imshow(2*outputImage.images(:,:,1)/max(max(outputImage.images(:,:,1))));	drawnow;	subplot(3,1,2);	imshow(2*outputImage.images(:,:,2)/max(max(outputImage.images(:,:,2))));	drawnow;	subplot(3,1,3);	imshow(2*outputImage.images(:,:,3)/max(max(outputImage.images(:,:,3))));	drawnow;end