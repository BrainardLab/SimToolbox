function SimCropRawHyper(inFileDir,outFileDir,width,height,dx,dy,sizex,sizey)% SimCropRawHyper(inFileDir,outFileDir,width,height,dx,dy,sizex,sizey)%% Crops a raw hyperspectral images, writing out a new one at% the cropped resolution.% % 6/xx/98		pxl Wrote it.% 10/28/98	dhb	Changed name, added comments.% 12/17/98  dhb Fixed up some comments.% 1/10/99   dhb Make all args required.%           dhb Handle case where variable refNames wasn't saved in file refSpectra.  % Check args and set defaultsif (nargin ~= 8)  error('Usage: SimCropRawHyper(inFileDir,outFileDir,width,height,dx,dy,sizex,sizey)');end% Get machine dependent path separatorif (isequal(computer,'PCWIN'))  pathSeparator='\';elseif (isequal(computer,'MAC2'))  pathSeparator=':';else  pathSeparator='/';end% Make output directoryif (~exist(outFileDir))  fprintf('Making output directory: %s\n',outFileDir);  eval(['!mkdir ' outFileDir ';']);  end% Chunk through and do it.for  k = 400 : 10 : 700  inFile = sprintf('%s%s%i',inFileDir,pathSeparator,k);	fprintf('Reading %s\n',inFile);  theImage = SimReadRawImage(inFile,height,width);	fprintf('Cropping\n');  theImage = theImage(dy:dy+sizey-1,dx:dx+sizex-1);	fprintf('Writing\n');  outFile = sprintf('%s%s%i',outFileDir,pathSeparator,k);  SimWriteRawImage(outFile,theImage);end% Copy the files describing the images.% If refSpectra isn't present, it is probably in the parent.inFile = sprintf('%s%srefSpectra.mat',inFileDir,pathSeparator);  if (~exist(inFile))  inFile = sprintf('%s%s..%srefSpectra.mat',inFileDir,pathSeparator,pathSeparator);  endeval(['load 'inFile]);outFile = sprintf('%s%srefSpectra.mat',outFileDir,pathSeparator);if (exist('refNames') == 1)	eval(['save ' outFile ' refSpectra refNames']);else	eval(['save ' outFile ' refSpectra']);endinFile = sprintf('%s%sMeans.mat',inFileDir,pathSeparator);outFile = sprintf('%s%sMeans.mat',outFileDir,pathSeparator);eval(['load 'inFile]);eval(['save ' outFile ' means']);inFile = sprintf('%s%simageFactors.mat',inFileDir,pathSeparator);outFile = sprintf('%s%simageFactors.mat',outFileDir,pathSeparator);eval(['load 'inFile]);eval(['save ' outFile ' imageFactors refSpectrum']);