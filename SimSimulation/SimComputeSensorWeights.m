function [weights,T] = SimComputeSensorWeights(hyperImage,camera)% [weights,T] = SimComputeSensorWeights(hyperImage,camera)%% Compute the necessary weights for the hyperspectral% images to simulate each of the camera's sensor types.%% Weights are returned as a matrix, with each column% containing the weights for one sensor class.%% 6/10/98  pxl  Wrote it based on ComputXYZWeights.% 24/10/98 pxl  Made it return a matrix of weights.% 10/30/98 dhb  Some comments.% 12/7/98  dhb  Optional return of T, in standard form.% 12/29/98 dhb  Handle computing of quantal weights here (in subroutine).%          dhb  Change input argument order.% 5/4/99   dhb  Handle hyperImage unit.% Adjust sensors for units, exposure, f-stop, etc.T_adjust = SimAdjustSensors(hyperImage,camera);% Spline CMF to resolution of hyperspectral camera.S_raw = [camera.wavelengthSampling.start camera.wavelengthSampling.step camera.wavelengthSampling.numberSamples];S_hyper = [hyperImage.wavelengthSampling.start hyperImage.wavelengthSampling.step hyperImage.wavelengthSampling.numberSamples];T = SplineCmf(S_raw,T_adjust,S_hyper);% Compute weightsfor n = 1:camera.numberSensors  switch(hyperImage.unit)   case 'Disk',    weights(:,n) = hyperImage.imageFactors .* T(n,:)';   case 'Power',    weights(:,n) = T(n,:)';   case 'Quanta',    weights(:,n) = T(n,:)';  endend