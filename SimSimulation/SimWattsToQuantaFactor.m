function factor = SimWattsToQuantaFactor(wavelength,focalLength,fStop,distance)% factor = SimWattsToQuantaFactor(wavelength,focalLength,fStop,distance)%% Compute a factor that converts power in the world (Watts/sr-m2)% to quanta/sec-m2 in the image plane.  You can also use this% factor to convert the sensitivities to work with Watts.%% Parameters%   wavelength					 Wavelength of light in nanometers%   focalLength					 Focal length of camera in meters%   fStop								 f-stop of camera%   distance						 Distance from camera to scene in meters%% 12/29/98  dhb  Wrote it from my earlier notes.% 2/23/99   dhb  Fix small bugs found by Russell.% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.% Compute the aperture size.  This% computation assumes that the f-stop% is defined in terms of the entrance% pupil, that is, the effective aperture% size given the lenses in front of it.% I believe this is correct, given the% discussion in Hecht, Optics, 2cd edition,% page 152.apertureDiameter = focalLength/fStop;% From the aperture size and distance,% compute the solid angle subtended by% the lens.%% The formula for solid angle comes from% Wyszecki and Stiles, Color Science, 2cd% edition, page 3.areaOnSphere = pi*(apertureDiameter/2)^2;solidAngle = areaOnSphere/distance^2;% Compute the size in the world that corresponds% to a square meter on the retina.oneMeter = 1;pixelAngle = 2*atan(oneMeter/(2*focalLength));worldSize = 2*tan(pixelAngle/2)*distance;worldArea = worldSize^2;% Compute total number of Watts arriving at a% square meter in the image plane, per Watt/sr-m2% in the world.imagePower = solidAngle*worldArea;% Convert to total number of quanta.  For this I call an% extant PsychToolbox routine.  The result is the % desired factor.factor = EnergyToQuanta(wavelength,imagePower);