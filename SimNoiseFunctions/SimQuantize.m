function [outputImage] = SimQuantize(inputImage,outputCamera)% [outputImage] = SimQuantize(inputImage,outputCamera)%% Quantize an image.%% 1/11/99   dhb  Wrote it.% 1/13/99   dhb  Finish.% 1/15/99   dhb  Optional print of debugging information.% 2/10/07   dhb  Turn off printout.% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.% Debugging information?DEBUG_PRINT = 0;% Read if necessaryif (~isstruct(inputImage))	inputImage = SimReadImage(inputImage);endif (~isstruct(outputCamera))	outputCamera = SimReadCamera(outputCamera);end% Figure out type and behave appropriately.type = outputCamera.quantize.type;switch (type)	case 'uniform',		if (DEBUG_PRINT)			numberPlanes = size(inputImage.images,3);			for i1 = 1:numberPlanes				temp = inputImage.images(:,:,i1);				maxval = max(temp(:));				minval = min(temp(:));				meanval = mean(temp(:));				medval = median(temp(:));				fprintf('SimQuantize: plane %g, max: %g, mean: %g, median: %g, min: %g\n',...					i1,maxval,meanval,medval,minval);			end		end		inputImage.bits = outputCamera.quantize.bits;		nLevels = 2^inputImage.bits;		inputImage.images = round(inputImage.images);		index = find(inputImage.images > nLevels-1);		if (~isempty(index))			inputImage.images(index) = nLevels-1;		end		index = find(inputImage.images < 0);		if (~isempty(index))			inputImage.images(index) = 0;		end	otherwise,endoutputImage = inputImage;