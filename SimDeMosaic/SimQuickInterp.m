function [outImage] = SimQuickInterp(inImage)% [outImage] = SimQuickInterp(inImage)%% Demosaices the image by putting the maximum value% at a given absent location.%% This method is not so good, but it is very fast.% % 11/03/98  pxl  Wrote it.% 11/9/98   dhb  Allow cameraFile to be a struct or filename.%      	    dhb	 Handle files that are already demosaiced.%           dhb  Separate input and output file names.if ( nargin <1 )  error(['SimQuickInterp(inImage)']);endif (isstruct(inImage))  outImage = inImage;else  outImage = SimReadImage(inImage); endif (~isstruct(inImage.cameraFile))	camera = SimReadCamera(inImage.cameraFile);else	camera = inImage.cameraFile;end% Only act if image is mosaiced.if (camera.spatialLayout.dims(1)*camera.spatialLayout.dims(2) ~= 1 & ...		inImage.imageType == 'sensor' & inImage.mosaiced == 1 )	kernalSize = max([camera.spatialLayout.dims(1) camera.spatialLayout.dims(2)])+1;	mask = SimCreateMask(camera,inImage.height,inImage.width); 	for n = 1:camera.numberSensors	  outImage.images(:,:,n) = ...			inImage.images(:,:,n) + ...			(ones(inImage.height,inImage.width) - mask(:,:,n)) .* ...			ordfilt2(inImage.images(:,:,n),kernalSize^2,ones(kernalSize,kernalSize));	end	% Clear mosaiced flag	outImage.mosaiced = 0;	outImage.bits = Inf;% Image was not mosaiced, just pass on by.else	outImage = inImage;end