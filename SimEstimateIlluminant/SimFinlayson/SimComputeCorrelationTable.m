function [table,E] = SimComputeCorrelationTable(spectralSensitivities,nSamples)% [table,E] = SimComputeCorrelationTable(spectralSensitivities,nSamples)%% Computes the correlation table for% a given set of illuminants and surfaces.%% Returns a cell array with delaunay triangulation of % the illuminants's gamuts.%% This routine needs to be more thoroughly commented.% The data files should be put into standard form% and moved into the SimData folder.  Probably the% data should be passed to this routine in the form% of a structure, rather than loaded here.% % xx/xx/98  pxl  Wrote it.% 12/31/98  dhb  Added some comments.% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.error('Do not use without thinking through.  Convert chromaticity to uv?');load('munsell.mat');load('objects.mat');load T_xyz1931reflectances = [munsell objects];clear munsell;clear objects;step = 1/nSamples;x = step:step:1;y = step:step:1;Y = ones(1,nSamples);A = [x   y   Y];B = xyYToXYZ(A);load B_roomillum;Be = B_roomillum(:,1:3);Ills = inv(T_xyz1931*Be)*B;e = Be*Ills;for (i=1:nSamples)   s(i) = size(find(e(:,i)<0),1); endI = find(s==0);E = e(:,I(1):I(size(I,2)));fprintf('-> %d : Room\n',size(I,2));load B_cieday;Be = B_cieday(:,1:3);Ills = inv(T_xyz1931*Be)*B;e = Be*Ills;for (i=1:nSamples)   s(i) = size(find(e(:,i)<0),1); endI = find(s==0);E = [E e(:,I(1):I(size(I,2)))];fprintf('-> %d : DayLight\n',size(E,2));load spd_incanCC;load spd_fluoE = [E spd_fluo spd_incanCC];fprintf('-> %d : Incan & fluo \n',size(E,2));table=zeros(nSamples*nSamples,size(E,2));for (T=1:size(E,2))  XX = spectralSensitivities*diag(E(:,T))*reflectances;  x = XX(1,:)./(XX(1,:)+XX(2,:)+XX(3,:));  y = XX(2,:)./(XX(1,:)+XX(2,:)+XX(3,:));  % Gamut boolean are stocked along a vector   table(round(x*nSamples)*nSamples+round(y*nSamples),T)=1;end