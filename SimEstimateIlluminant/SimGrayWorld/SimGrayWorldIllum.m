function [outputImage,estimatedIlluminant,S] = SimGrayWorldIllum(inputImage,priorsFileName)% [outputImage,estimatedIlluminant,S] = SimGrayWorldIllum(inputImage,priorsFileName)%% Use Buchsbaum's algorithm to estimate the illuminant% Illumant estimate is put inside a field of the image% called estimatedIlluminant%% Priors are in a file of the the same type as the one used% by the Bayesian color correction algorithm.  It basically contains% a description of the linear models for illumination and surfaces.%% 9/13/93      dhb  Created.% 12/16/95     dhb  Fixed to work for N_beta == 1.% 09/14/98     pxl  Renamed, and modified for Simulator use% 11/04/98     pxl  Comments% 11/07/98     pxl  Changed return to illuminant% 11/25/98     pxl  Chenged return to field of image.% 12/28/98     dhb  Variable name changes.  Get rid of illuminant dump.% 12/29/98     dhb  Convert sensors so that they relate to physical units.% 12/30/98     dhb  Use color priors as structure.% 12/31/98     dhb  Return illuminant and S.%              dhb  Allow passing of priors as struct as well as file.%              dhb  Allow camera to be passed as a struct in image.% Get the image and camera informationif (isstruct(inputImage))  outputImage = inputImage;else  outputImage = SimReadImage(inputImage); endclear inputImage;if (~isstruct(outputImage.cameraFile))  camera = SimReadCamera(outputImage.cameraFile);else  camera = outputImage.cameraFile;endR = SimAdjustSensors(outputImage,camera);% Load priors.if (isstruct(priorsFileName))  colorPriors = priorsFileName;else  colorPriors = SimLoadColorPriors(priorsFileName);end% Compute average sensor response[N_R,nil] = size(R);yAvg = squeeze(mean(mean(outputImage.images)));% Use mean response to compute illuminant and tuck it% into the right field.u_surface_spd = colorPriors.sur.B*colorPriors.sur.u;RS = R*diag(u_surface_spd);estimatedIlluminant = colorPriors.light.B*((RS*colorPriors.light.B)\yAvg);outputImage.estimatedIlluminant.spd = estimatedIlluminant;S = colorPriors.S;outputImage.estimatedIlluminant.S = S;