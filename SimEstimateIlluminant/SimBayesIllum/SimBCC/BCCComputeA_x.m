function A_x = BCCComputeA_x(x,N_x,B_light,N_beta,B_surface,R)% A_x = BCCComputeA_x(x,N_x,B_light,N_beta,B_surface,R)%% Compute the A matrix that relates the generic% variable beta to the data, given the vector x.%% 8/31/94		dhb		Added this line.% 11/08/98  pxl		Changed names of functions% Copyright (c) 1999 David Brainard and Philippe Longere.   All rights reserved.% Find sizes we need[N_r,null] = size(R);[null,M_x] = size(B_light);[null,M_beta] = size(B_surface);% Allocate spaceA_x = zeros(N_x*N_beta*N_r,N_beta*M_beta);A_xi = zeros(N_r,N_x);% Loop over surfacesfor i = 1:N_x  % Get A_xi matrix  x_i = BCCExtractOneWeights(i,x,M_x);  A_xi = BCCComputeA(x_i,B_light,B_surface,R);    % Pack it in appropriately  for j = 1:N_beta    A_x((i-1)*(N_beta*N_r)+(j-1)*N_r+1:(i-1)*(N_beta*N_r)+j*N_r,...           (j-1)*(M_beta)+1:j*M_beta) = ...      A_xi;  endend